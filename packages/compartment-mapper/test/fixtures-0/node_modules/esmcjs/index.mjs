import defaultAsName from './module-exports-assigned-object.cjs';
import * as namespaceAsName from './module-exports-assigned-object.cjs';
// import { name } from './module-exports-assigned-object.cjs'; // Not expected to work, does not work on Node.js

import explicitDefault from './set-explicit-default.cjs';
import * as namespaceExplicitDefault from './set-explicit-default.cjs';

import './require-no-implicit-default.cjs';

if (defaultAsName.name !== 42) {
  throw new Error(
    `Assigning to module exports should be equivalent to exporting a default`
  );
}
if (namespaceAsName.default.name !== 42) {
  throw new Error(
    `Assigning to module exports should be equivalent to exporting a default on the namespace object`
  );
}
if (namespaceAsName.name !== undefined) {
  throw new Error(
    `Assigning to module exports should not replace the properties of the namespace object`
  );
}

if (explicitDefault !== 2) {
  throw new Error(
    `Explicit default export was not imported as default`
  );
}

const keys = Object.keys(namespaceExplicitDefault).sort().join()
if (keys !== 'default,notDefault') {
  throw new Error(
    `Expected import * to find 'default,notDefault', got ${keys}`
  );
}
